    - name: Check if phplist source files exist in /usr/local/src...
      find:
        paths: /usr/local/src
        patterns: phplist.latest.zip
      register: phplist_src_check

    - name: Download phplist if it doesn't exist in /usr/src...
      get_url:
        url: https://sourceforge.net/projects/phplist/files/latest/download
        dest: /usr/local/src/phplist.latest.zip
        mode: 0664
      when: (phplist_src_check.matched == 0) or
            (phplist_src_check.changed == true)

    - name: Check to see if phplist files already exist on webserver...
      stat:
        path: /var/www/lists/config/config.php
      check_mode: true
      register: phplist_install

    - name: Unzip phplist source files if a fresh download...
      unarchive:
        src: /usr/local/src/phplist.latest.zip
        dest: /usr/local/src
        remote_src: true
        owner: www-data
        group: www-data
        mode: 0640
      when: phplist_install.stat.exists == false

    - name: Move phplist directory to webserver directory...
      shell: find /usr/local/src -name "lists" -type d -print0 | xargs -0 -I {} mv {} /var/www/ && \
             find /usr/local/src/ -name "phplist-*" type d -print0 | xargs -0 -I {} rm {}
      when: phplist_install.stat.exists == false

    - name: Get variables for phplist configuration (hotmail, aol, gmail, etc)...
      include_vars: "vars/{{ ans_bouncedomain }}.yml"
      when: (ans_bouncedomain == "gmail.com") or
            (ans_bouncedomain == "yahoo.com") or
            (ans_bouncedomain == "hotmail.com") or
            (ans_bouncedomain == "outlook.com") or
            (ans_bouncedomain == "aol.com")

    - name: Get variables for phplist configuration (custom/other domain)...
      include_vars: "vars/other.com.yml"
      when: (ans_bouncedomain != "gmail.com") and
            (ans_bouncedomain != "yahoo.com") and
            (ans_bouncedomain != "hotmail.com") and
            (ans_bouncedomain != "outlook.com") and
            (ans_bouncedomain != "aol.com")

    - name: Set phplist configuration file...
      template:
        src: templates/config_php.j2
        dest: /var/www/lists/config/config.php
        backup: true
        owner: www-data
        group: www-data
        mode: 0640
      when: phplist_install.stat.exists == false

    - name: Create phplist cron script...
      template:
        src: templates/phplist_cron.j2
        dest: /usr/local/bin/phplist
        owner: www-data
        group: www-data
        mode: 750

    - name: Install phplist queue cron script...
      cron:
        name: phplist
        minute: "*/5"
        user: www-data
        job: "/usr/local/bin/phplist -pprocessqueue > /dev/null 2>&1"
        cron_file: phplist_queue

    - name: Install phplist bounces cron script...
      cron:
        name: phplist
        minute: "7"
        hour: "3"
        user: www-data
        job: "/usr/local/bin/phplist -pprocessbounces > /dev/null 2>&1"
        cron_file: phplist_bounce

    - name: Set permissions on phplist directories...
      file:
        path: /var/www/lists
        state: directory
        recurse: true
        owner: www-data
        group: www-data
        mode: 0750
